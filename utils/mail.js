// const nodemailer = require('nodemailer');
// const { ForgetTemplate } = require('./template');

// const SendEmail = async (sender, title, link, fullname) => {
//   try {
//     const config = nodemailer.createTransport({
//       service: "gmail",
//       auth: {
//         user: process.env.SMTP_EMAIL,
//         pass: process.env.SMTP_PASS,
//       },
//     });

//     const option = {
//       from: process.env.SMTP_EMAIL,
//       to: sender,
//       subject: title,
//       html: ForgetTemplate(link, fullname),
//     };

//     await config.sendMail(option);
//     return true;
//   } catch (error) {
//     console.error('Email error:', error);
//     return false;
//   }
// };

// module.exports = { SendEmail };

// const nodemailer = require('nodemailer');
// const { ForgetTemplate } = require('./template');

// const SendEmail = async (sender, title, link, fullname) => {
//   try {
//     // тЭМ service: "gmail" рдХрд╛ рдЙрдкрдпреЛрдЧ рди рдХрд░реЗрдВ
//     // тЬЕ рдпрд╣ рд╕реНрдкрд╖реНрдЯ (explicit) рдХреЙрдиреНрдлрд╝рд┐рдЧрд░реЗрд╢рди рд╣рдореЗрд╢рд╛ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ
//     const transporter = nodemailer.createTransport({
//       host: 'smtp.gmail.com',      // Gmail рдХрд╛ SMTP рд╕рд░реНрд╡рд░
//       port: 587,                 // <-- YEH BADLAAV KAREIN
//       secure: false,            // port 587 рдХреЗ рд▓рд┐рдП false рд╣реЛрддрд╛ рд╣реИ
//       auth: {
//         user: process.env.SMTP_EMAIL, // рдЖрдкрдХрд╛ рдкреВрд░рд╛ рдИрдореЗрд▓
//         pass: process.env.SMTP_PASS,  // рдЖрдкрдХрд╛ 16-рдЕрдХреНрд╖рд░реЛрдВ рд╡рд╛рд▓рд╛ App Password
//       },
//     });

//     const mailOptions = {
//       from: `"Your App Name" <${process.env.SMTP_EMAIL}>`, // рдпреВрдЬрд╝рд░ рдХреЛ рдПрдХ рдЕрдЪреНрдЫрд╛ рдирд╛рдо рджрд┐рдЦрд╛рдПрдБ
//       to: sender,
//       subject: title,
//       html: ForgetTemplate(link, fullname),
//     };

//     // рдИрдореЗрд▓ рднреЗрдЬрдиреЗ рдХрд╛ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ
//     await transporter.sendMail(mailOptions);
//     console.log(`Email successfully sent to ${sender}`);
//     return true;

//   } catch (error) {
//     // рдПрд░рд░ рдХреЛ рд╡рд┐рд╕реНрддрд╛рд░ рд╕реЗ рд▓реЙрдЧ рдХрд░реЗрдВ
//     console.error('Failed to send email. Full Error:', error);
//     return false;
//   }
// };

// module.exports = { SendEmail };
// email.js

// email.js

// 1. SendGrid рдХреА рд▓рд╛рдЗрдмреНрд░реЗрд░реА рдХреЛ import рдХрд░реЗрдВ
const sgMail = require('@sendgrid/mail');
// 2. рдЕрдкрдиреЗ рдИрдореЗрд▓ рдЯреЗрдореНрдкрд▓реЗрдЯ рдХреЛ import рдХрд░реЗрдВ (рдпрд╣ рдкрд╣рд▓реЗ рдЬреИрд╕рд╛ рд╣реА рд░рд╣реЗрдЧрд╛)
const { ForgetTemplate } = require('./template');

// 3. SendGrid рдХреЛ рдЕрдкрдиреА API Key рдмрддрд╛рдПрдВ
//    рд╣рдо Render рдХреЗ SMTP_PASS variable рд╕реЗ рд╣реА API Key рдкреЭ рд░рд╣реЗ рд╣реИрдВ
sgMail.setApiKey(process.env.SMTP_PASS);

// 4. рдкреВрд░рд╛ SendEmail function
const SendEmail = async (sender, title, link, fullname) => {
  // try...catch рдмреНрд▓реЙрдХ рдХрд┐рд╕реА рднреА рдПрд░рд░ рдХреЛ рдкрдХреЬрдиреЗ рдХреЗ рд▓рд┐рдП
  try {
    // рдИрдореЗрд▓ рдХрд╛ рдкреВрд░рд╛ рдореИрд╕реЗрдЬ рдСрдмреНрдЬреЗрдХреНрдЯ рдмрдирд╛рдПрдБ
    const msg = {
      to: sender, // рдЬрд┐рд╕реЗ рдИрдореЗрд▓ рднреЗрдЬрдирд╛ рд╣реИ (e.g., 'test@example.com')

      // ЁЯЪи реЫрд░реВрд░реА: рдпрд╣ рдИрдореЗрд▓ рдЖрдкрдХреЗ SendGrid рдЕрдХрд╛рдЙрдВрдЯ рдореЗрдВ "Verified Sender" рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП
      from: process.env.SMTP_EMAIL,

      subject: title, // рдИрдореЗрд▓ рдХрд╛ рд╡рд┐рд╖рдп
      html: ForgetTemplate(link, fullname), // рдИрдореЗрд▓ рдХрд╛ рдХрдВрдЯреЗрдВрдЯ
    };

    // рдИрдореЗрд▓ рднреЗрдЬрдиреЗ рдХрд╛ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ
    await sgMail.send(msg);

    // рдЕрдЧрд░ рд╕рдлрд▓ рд╣реЛ, рддреЛ console рдореЗрдВ log рдХрд░реЗрдВ рдФрд░ true return рдХрд░реЗрдВ
    console.log(`Email successfully sent to ${sender} using SendGrid!`);
    return true;

  } catch (error) {
    // --------------------------------------------------------------------
    // рдЕрдЧрд░ рдИрдореЗрд▓ рднреЗрдЬрдиреЗ рдореЗрдВ рдХреЛрдИ рднреА рд╕рдорд╕реНрдпрд╛ рдЖрддреА рд╣реИ, рддреЛ рдпрд╣ рд╣рд┐рд╕реНрд╕рд╛ рдЪрд▓реЗрдЧрд╛
    // --------------------------------------------------------------------

    // 1. console рдореЗрдВ рдПрдХ рд╕рд╛рдорд╛рдиреНрдп рдПрд░рд░ рдореИрд╕реЗрдЬ рджрд┐рдЦрд╛рдПрдБ
    console.error('Failed to send email using SendGrid. Full Error:', error);

    // 2. SendGrid рд╕реЗ рдорд┐рд▓реЗ рдЕрд╕рд▓реА рдПрд░рд░ рдХреЛ рджрд┐рдЦрд╛рдПрдБ (рдпрд╣ рд╕рдмрд╕реЗ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╣реИ)
    //    рдЕрд╕рд▓реА рдХрд╛рд░рдг рдпрд╣реАрдВ рдкрддрд╛ рдЪрд▓реЗрдЧрд╛ (e.g., "Permission Denied", "Email is not a verified sender")
    if (error.response) {
      console.error("SendGrid's detailed error response:", error.response.body);
    }

    // 3. false return рдХрд░реЗрдВ рддрд╛рдХрд┐ рдЖрдкрдХреЗ controller рдХреЛ рдкрддрд╛ рдЪрд▓реЗ рдХрд┐ рдИрдореЗрд▓ рдлреЗрд▓ рд╣реЛ рдЧрдпрд╛
    return false;
  }
};

// 5. рдЗрд╕ function рдХреЛ export рдХрд░реЗрдВ рддрд╛рдХрд┐ рджреВрд╕рд░реА рдлрд╛рдЗрд▓реЛрдВ рдореЗрдВ рдЗрд╕реНрддреЗрдорд╛рд▓ рд╣реЛ рд╕рдХреЗ
module.exports = { SendEmail };